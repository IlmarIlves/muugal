/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  UserRoleEnum: "ADMIN" | "USER"
  UserStatusEnum: "ACTIVE" | "DEACTIVATED" | "DISABLED"
}

export interface NexusGenRootTypes {
  Admin: {};
  LoginResponse: { // root type
    accessToken: string; // String!
  }
  Mutation: {};
  Query: {};
  User: { // root type
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    userStatus: NexusGenEnums['UserStatusEnum']; // UserStatusEnum!
  }
  Viewer: { // root type
    accessToken: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  UserRoleEnum: NexusGenEnums['UserRoleEnum'];
  UserStatusEnum: NexusGenEnums['UserStatusEnum'];
}

export interface NexusGenFieldTypes {
  Admin: { // field return type
    user: any; // NEXUS__UNKNOWN__TYPE!
  }
  LoginResponse: { // field return type
    accessToken: string; // String!
  }
  Mutation: { // field return type
    login: NexusGenRootTypes['LoginResponse']; // LoginResponse!
    logout: boolean; // Boolean!
    register: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    viewer: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    userStatus: NexusGenEnums['UserStatusEnum']; // UserStatusEnum!
  }
  Viewer: { // field return type
    accessToken: string; // String!
  }
}

export interface NexusGenArgTypes {
  Admin: {
    user: { // args
      userId?: string | null; // ID
    }
  }
  Mutation: {
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    register: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Admin" | "LoginResponse" | "Mutation" | "Query" | "User" | "Viewer";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "UserRoleEnum" | "UserStatusEnum";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}