### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Admin {
  """Admin order by id"""
  order(
    """User identifier"""
    orderId: ID

    """Order price in cents"""
    priceInCents: Int
  ): AdminOrder!

  """List of users"""
  orders: AdminOrders!

  """Admin payment by id"""
  payment(
    """Payment identifier"""
    paymentId: ID
  ): AdminPayment!

  """List of users"""
  payments: AdminPayments!

  """Admin user by id"""
  user(
    """User identifier"""
    userId: ID
  ): AdminUser!

  """List of users"""
  users(filter: AdminUsersFilterInput, match: MatchInput, pagination: PaginationInput): AdminUsers!
}

type AdminOrder {
  """User role"""
  additionalInfo: String!

  """User role"""
  amount: Int!

  """User role"""
  colors: String!
  data: String!
  email: String!
  id: ID!
  mimeType: String!
  telephone: String!
  userId: ID!
}

type AdminOrders {
  """List of paginated orders"""
  orders: [AdminOrder!]!
}

type AdminPayment {
  """Payment amount"""
  amount: Int!

  """Payment currencyCode"""
  currencyCode: String!

  """Payment currencyCode"""
  emailUsedForPayment: String!

  """Payment unique id"""
  id: ID!

  """Payment user unique id"""
  stripeSessionId: String!

  """Payment user unique id"""
  userId: ID!
}

type AdminPayments {
  """List of paginated orders"""
  payments: [AdminPayment!]!
}

type AdminUser {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!

  """User role"""
  userRole: [UserRoleEnum!]!

  """User status"""
  userStatus: UserStatusEnum!
}

type AdminUsers {
  skip: Int!
  take: Int!
  total: Int!

  """List of paginated users"""
  users: [AdminUser!]!
}

input AdminUsersFilterInput {
  """Filter users by email"""
  email: String

  """Filter users by first name"""
  firstName: String

  """Filter users by last name"""
  lastName: String

  """Filter users by id"""
  userId: String
}

enum ConditionModeEnum {
  AND
  OR
}

type LoginResponse {
  accessToken: String!
}

input MatchInput {
  conditionMode: ConditionModeEnum = AND
  matchMode: MatchModeEnum = STARTS_WITH
}

enum MatchModeEnum {
  CONTAINS
  EXACT
  STARTS_WITH
}

type Mutation {
  """Reset user password"""
  adminResetUserPassword(
    """User id"""
    userId: ID
  ): AdminUser!

  """Changes current user password"""
  changePassword(
    """Confirmation password"""
    confirmPassword: String

    """Current password"""
    currentPassword: String

    """New password"""
    newPassword: String
  ): Viewer!

  """Creates new Stripe checkout session"""
  createStripeCheckoutSession(
    """Product price"""
    priceInCents: Int

    """Product name"""
    productName: String

    """Product quantity"""
    quantity: Int
  ): Payment!

  """Logs out signed-in user if any"""
  delete: Boolean!

  """Attempts to log user in"""
  login(
    """Email address"""
    email: String

    """Password"""
    password: String
  ): LoginResponse!

  """Logs out signed-in user if any"""
  logout: Boolean!

  """Uploads file"""
  order(
    """Upload file"""
    file: Upload
  ): Order!

  """Registers new user"""
  registerUser(
    """Email address"""
    email: String

    """First name"""
    firstName: String

    """Is user Buyer"""
    isUserBuyer: Boolean

    """Is user Offerer"""
    isUserOfferer: Boolean

    """Last name"""
    lastName: String

    """Package machine location"""
    packageMachineLocation: String

    """Password"""
    password: String

    """Telephone"""
    telephone: String

    """New user status"""
    userRole: UserRoleEnum
  ): User!

  """Updates user status"""
  updateOrderPrice(
    """Order finished in days"""
    finishedInDays: Int

    """Order price"""
    lastOffererUserId: Int

    """Order identifier"""
    orderId: ID

    """Order price"""
    priceInCents: Int
  ): Order!

  """Updates user status"""
  updateOrderStatus(
    """User email"""
    email: String

    """User email"""
    firstName: String

    """User email"""
    lastName: String

    """User package machine location"""
    packageMachineLocation: String

    """User telephone"""
    telephone: String

    """User identifier"""
    userId: ID
  ): User!
}

type Order {
  """User role"""
  additionalInfo: String!

  """User role"""
  amount: Int!

  """User role"""
  colors: String!
  data: String!
  email: String!
  id: ID!
  mimeType: String!
  telephone: String!
  userId: ID!
}

enum OrderProgressStatusEnum {
  PAID
  PAYMENT
  RECEIVED
  SENT
}

input PaginationInput {
  """Number of items to skip"""
  skip: Int

  """Number of items to take"""
  take: Int
}

type Payment {
  """Payment amount"""
  amount: Int!

  """Payment currencyCode"""
  currencyCode: String!

  """Payment currencyCode"""
  emailUsedForPayment: String!

  """Payment unique id"""
  id: ID!

  """Payment user unique id"""
  stripeSessionId: String!

  """Payment user unique id"""
  userId: ID!
}

type Query {
  """Admin resolvers"""
  admin: Admin!

  """Query viewer"""
  viewer: User
}

"""File upload"""
scalar Upload

type User {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  packageMachineLocation: String!
  telephone: String!

  """User status"""
  userStatus: UserStatusEnum!
}

enum UserRoleEnum {
  ADMIN
  BUYER
  OFFERER
  USER
}

enum UserStatusEnum {
  ACTIVE
  DEACTIVATED
  DISABLED
}

type Viewer {
  accessToken: String!
  firstName: String!
  lastName: String!
}
